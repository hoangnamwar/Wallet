{"version":3,"sources":["state/action-type/index.ts","assets/generatedtext (2).png","assets/dummyData.ts","state/reducers/walletReducer.ts","state/reducers/index.ts","state/store.ts","state/action-creators/index.ts","components/FormInput/FormInput.tsx","components/Header/Header.tsx","components/Arcodion/TabAccordion.tsx","components/MainBoard/MainBoard.tsx","components/List/List.tsx","Router/ListMoneyIn/ListMoneyIn.tsx","Router/ListMoneyOut/ListMoneyOut.tsx","Router/History/History.tsx","Router/Board/Board.tsx","App.tsx","index.tsx"],"names":["ActionType","MoneyFlow","Group","TimeRepeat","testData","intinialState","generalMoney","list","id","money_flow","MONEY_IN","group","FIXED","name","money_input","past","id_form","time_now","time_set","time_repeat","MONTH","QUARTER","MONEY_OUT","WEEK","IMMEDIATE","NULL","FUTURE","test","localStorage","getItem","JSON","parse","walletReducers","state","action","type","ADD","length","payload","i","money","DELETE","forEach","item","index","splice","FIX","reducer","combineReducers","wallet","store","createStore","applyMiddleware","thunk","addMoney","dispatch","deleteMoney","fixMoney","FormInput","props","useDispatch","bindActionCreators","actionCreators","useState","timeSet","setTimeSet","timeRepeat","setTimeRepeat","React","Date","value","setValue","useForm","register","handleSubmit","formState","errors","reset","onSubmitForm","data","console","log","getTime","now","undefined","handleClose","money_flow_data","group_data","time_repeat_data","DAY","YEAR","className","onSubmit","TextField","select","label","defaultValue","map","option","MenuItem","onChange","e","target","Input","required","placeholder","min","valueAsNumber","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","DateTimePicker","renderInput","params","newValue","minDateTime","disabled","Button","color","onClick","Header","open","setOpen","signIn","setSignIn","src","logo","alt","fontSize","Backdrop","sx","zIndex","theme","drawer","s","Accordion","styled","disableGutters","elevation","square","border","palette","divider","borderBottom","display","TabAccordion","expanded","setExpanded","location","useLocation","pathname","slice","click","setClick","handleChange","panel","event","isExpanded","AccordionSummary","expandIcon","backgroundColor","mode","flexDirection","transform","marginLeft","MuiAccordionDetails","padding","borderTop","to","aria-controls","Typography","MainBoard","timeShow","walletState","useSelector","first","second","third","don_vi","strFirst","strSecond","strThird","setShow","time","NOW","day","A_MONTH","THREE_MONTH","SIX_MONTH","t","one","one_day","time_distan","a","b","c","Math","floor","negative","abs","toString","Grid","container","lg","md","sm","xs","List","money_flow_prop","group_prop","setSelect","rows","setRows","descendingComparator","orderBy","useEffect","row","ite","push","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","Box","component","visuallyHidden","EnhancedTableToolbar","Toolbar","pl","pr","bgcolor","alpha","primary","main","activatedOpacity","flex","variant","Tooltip","title","task","behaviorTime","setSelected","IconButton","rowsEx","deleteList","behaviorMoney","money_str","ship","substring","timeDate","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","behaviorTimeRepeat","setOrder","setOrderBy","selected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","max","width","Paper","mb","TableContainer","Table","minWidth","aria-labelledby","size","newSelecteds","n","array","rowEx","TableBody","comparator","stabilizedThis","el","sort","stableSort","getComparator","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","FormControlLabel","control","Switch","ListMoneyIn","ListMoneyOut","History","Board","path","exact","render","App","setItem","stringify","StylesProvider","injectFirst","Container","maxWidth","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15ab5713.chunk.js","sourcesContent":["// ----------- Type Action -------------\r\nexport enum ActionType \r\n{\r\n    ADD = 'ADD',\r\n    DELETE = 'DELETE',\r\n    FIX = 'FIX',\r\n}\r\n//--------------------------------------\r\n\r\n//------------ Type each part ---------------\r\nexport enum MoneyFlow\r\n{\r\n    MONEY_IN = \"MONEY_IN\",\r\n    MONEY_OUT = \"MONEY_OUT\"\r\n} \r\nexport enum Group\r\n{\r\n    FIXED = \"Cố định\",\r\n    FUTURE = \"Tương lai\",\r\n    IMMEDIATE = \"Hiện tại\"\r\n} \r\nexport enum TimeRepeat \r\n{\r\n    NULL = 0,\r\n    DAY = 1,\r\n    WEEK = 7,\r\n    MONTH = 31,\r\n    QUARTER = 122,\r\n    YEAR = 365,\r\n}\r\nexport type FormData = \r\n{\r\n    money_flow: MoneyFlow,\r\n    group: Group,\r\n    name: string,\r\n    money_input: number,\r\n}\r\n//--------------------------------------\r\n\r\n//------------ Type single action ---------------\r\ntype addMoney = \r\n{\r\n    type: ActionType.ADD,\r\n    payload: \r\n    {\r\n        money_flow: MoneyFlow,\r\n        group: Group,\r\n        name: string,\r\n        money_input: number,\r\n        time_set: number,\r\n        time_now: number,\r\n        time_repeat: TimeRepeat,\r\n        past: boolean,\r\n        id_form: number | null,\r\n    }\r\n}\r\ntype deleteMoney = \r\n{\r\n    type: ActionType.DELETE,\r\n    payload: number,\r\n}\r\ntype fixMoney = \r\n{\r\n    type: ActionType.FIX,\r\n    payload: \r\n    {\r\n        id: number,\r\n        money_input: number,\r\n        name: string,\r\n        time_set: number,\r\n        time_repeat: TimeRepeat,\r\n    },\r\n}\r\n//----------------------------------------\r\n\r\n//------------ Type General Action ---------------\r\nexport type Action = addMoney | deleteMoney | fixMoney","export default __webpack_public_path__ + \"static/media/generatedtext (2).1b17a8ee.png\";","\r\nimport { Group, MoneyFlow, TimeRepeat } from \"../state/action-type\";\r\n\r\ntype receipt = \r\n{\r\n    id: number,\r\n    money_flow: MoneyFlow,\r\n    group: Group,\r\n    name: string,\r\n    money_input: number,\r\n    past: boolean,\r\n    id_form: number | null,\r\n    time_set: number,\r\n    time_now: number,\r\n    time_repeat: TimeRepeat,\r\n\r\n}\r\n//----------------------\r\n\r\nconst data: receipt[] = \r\n[\r\n    {\r\n        id: 1,\r\n        money_flow: MoneyFlow.MONEY_IN,\r\n        group: Group.FIXED,\r\n        name: \"Luơng\",\r\n        money_input: 10000000,\r\n        past: false,\r\n        id_form: 1,\r\n        time_now: 1632384952668,\r\n        time_set: 1632384952668,\r\n        time_repeat: TimeRepeat.MONTH\r\n        \r\n    },\r\n    {\r\n        id: 2,\r\n        money_flow: MoneyFlow.MONEY_IN,\r\n        group: Group.FIXED,\r\n        name: \"Lai suat ngan hang\",\r\n        money_input: 1000000,\r\n        past: false,\r\n        id_form: 2,\r\n        time_now: 1632384952668,\r\n        time_set: 1632384952668,\r\n        time_repeat: TimeRepeat.QUARTER\r\n    },\r\n    {\r\n        id: 3,\r\n        money_flow: MoneyFlow.MONEY_OUT,\r\n        group: Group.FIXED,\r\n        name: \"Tiền phòng\",\r\n        money_input: 3000000,\r\n        past: false,\r\n        id_form: 3,\r\n        time_now: 1632384952668,\r\n        time_set: 1632384952668,\r\n        time_repeat: TimeRepeat.MONTH\r\n    },\r\n    {\r\n        id: 4,\r\n        money_flow: MoneyFlow.MONEY_OUT,\r\n        group: Group.FIXED,\r\n        name: \"Tiền ăn\",\r\n        money_input: 200000,\r\n        past: false,\r\n        id_form: 4,\r\n        time_now: 1632384952668,\r\n        time_set: 1632384952668,\r\n        time_repeat: TimeRepeat.WEEK\r\n    },\r\n    {\r\n        id: 5,\r\n        money_flow: MoneyFlow.MONEY_OUT,\r\n        group: Group.IMMEDIATE,\r\n        name: \"Đổ xăng\",\r\n        money_input: 50000,\r\n        past: true,\r\n        id_form: null,\r\n        time_now: 1632384952668,\r\n        time_set: 1632384952668,\r\n        time_repeat: TimeRepeat.NULL\r\n    },\r\n    {\r\n        id: 6,\r\n        money_flow: MoneyFlow.MONEY_OUT,\r\n        group: Group.FUTURE,\r\n        name: \"Tiền quà\",\r\n        money_input: 200000,\r\n        past: true,\r\n        id_form: null,\r\n        time_now: 1632387205736,\r\n        time_set: 1632384952668,\r\n        time_repeat: TimeRepeat.NULL\r\n    },\r\n]\r\n\r\nexport default data;","import dummyData from '../../assets/dummyData';\r\nimport data from '../../assets/dummyData'\r\nimport { Action, ActionType, Group, MoneyFlow, TimeRepeat } from '../action-type'\r\n\r\nconst intinialState = \r\n{\r\n    generalMoney: 12345678,\r\n    list: data,\r\n}\r\n\r\nlet test = localStorage.getItem('dataWallet');\r\nlet testData: stateType;\r\nif (test === null )\r\n{\r\n    testData = {...intinialState};\r\n}\r\nelse\r\n{\r\n    testData = JSON.parse(test);\r\n    // testData = JSON.parse(test);\r\n}\r\n\r\ntype receipt = \r\n{\r\n    id: number,\r\n    money_flow: MoneyFlow,\r\n    group: Group,\r\n    name: string,\r\n    money_input: number,\r\n    past: boolean,\r\n    id_form: number | null,\r\n    time_set: number,\r\n    time_now: number,\r\n    time_repeat: TimeRepeat,\r\n}\r\n\r\ntype stateType =\r\n{\r\n    generalMoney: number,\r\n    list: receipt[]\r\n}\r\n\r\nconst walletReducers = (state: stateType = testData, action: Action) =>\r\n{\r\n    switch (action.type)\r\n    {\r\n        case ActionType.ADD:\r\n        {\r\n            let id = state.list[state.list.length - 1].id + 1;\r\n            let list: receipt[] = [...state.list];\r\n            let payload = action.payload;\r\n            switch (payload.group)\r\n            {\r\n                case Group.FIXED:\r\n                {\r\n                    let id_form: number | null = 1;\r\n                    for(let i=list.length - 1; i >= 0; i-- )\r\n                    {\r\n                        if ( (list[i].group === Group.FIXED) && (list[i].id_form !== null) )\r\n                        {\r\n                            id_form = list[i].id_form;\r\n                            break;\r\n                        }\r\n                        payload.id_form = id_form;\r\n                        list = [ ...list, \r\n                            {\r\n                                id: id,\r\n                                ...payload,\r\n                            }\r\n                        ]\r\n                    }\r\n                    return{\r\n                        generalMoney: state.generalMoney,\r\n                        list : [ ...list]\r\n                    }\r\n                }\r\n                case Group.FUTURE:\r\n                {\r\n                    list = [ ...list, \r\n                        {\r\n                            id: id,\r\n                            // id_form: null,\r\n                            ...action.payload,\r\n                        }\r\n                    ]\r\n                    return{\r\n                        generalMoney: state.generalMoney,\r\n                        list : [ ...list]\r\n                    }\r\n                }\r\n                case Group.IMMEDIATE:\r\n                {\r\n                    let money = state.generalMoney;\r\n                    if (payload.money_flow === MoneyFlow.MONEY_IN)\r\n                        money += payload.money_input;\r\n                    else \r\n                        money -= payload.money_input;\r\n                    list = [ \r\n                        ...list, \r\n                        {\r\n                            id: id,\r\n                            // id_form: null,\r\n                            ...action.payload,\r\n                        }\r\n                    ]\r\n                    return{\r\n                        generalMoney: money,\r\n                        list: [ ...list]\r\n                    }\r\n                }\r\n                default: \r\n                    return state;\r\n            }\r\n        }\r\n        case ActionType.DELETE:\r\n        {\r\n            let list=[...state.list];\r\n            list.forEach((item, index) =>\r\n            {\r\n                if (item.id === action.payload)\r\n                {\r\n                    list.splice(index, 1);\r\n                }\r\n            })\r\n            return{\r\n                generalMoney: state.generalMoney,\r\n                list: [...list],\r\n            }\r\n        }\r\n        case ActionType.FIX:\r\n            {\r\n                let list=[...state.list];\r\n                let money = 0;\r\n                list.forEach((item, index) =>\r\n                {\r\n                    if (item.id === action.payload.id)\r\n                    {\r\n                        if(item.money_flow === MoneyFlow.MONEY_IN)\r\n                            money = action.payload.money_input - item.money_input;\r\n                        else money = item.money_input - action.payload.money_input;\r\n                        item.money_input = action.payload.money_input;\r\n                        item.name = action.payload.name;\r\n                        item.time_set = action.payload.time_set;\r\n                        item.time_repeat = action.payload.time_repeat;\r\n                    }\r\n                })\r\n                return{\r\n                    generalMoney: state.generalMoney + money,\r\n                    list: [...list],\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default walletReducers;","import { combineReducers } from 'redux'\r\nimport walletReducers from './walletReducer'\r\n\r\nconst reducer = combineReducers({\r\n    wallet: walletReducers\r\n})  \r\n\r\nexport default reducer;\r\nexport type RootState = ReturnType<typeof reducer>","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducers\";\r\n\r\n\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\n\r\nexport default store;","import { Dispatch } from \"react\";\r\nimport { Action, ActionType, Group, MoneyFlow, TimeRepeat } from \"../action-type\";\r\n\r\n\r\n\r\nexport const addMoney = (\r\n    money_flow: MoneyFlow,\r\n    group: Group,\r\n    name: string,\r\n    money_input: number,\r\n    time_set: number,\r\n    time_now: number,\r\n    time_repeat: TimeRepeat,\r\n    past: boolean,\r\n    id_form: number | null\r\n ) =>\r\n{\r\n    return (dispatch: Dispatch<Action>) =>\r\n    {\r\n        dispatch({\r\n            type: ActionType.ADD,\r\n            payload:\r\n            {\r\n                money_flow : money_flow,\r\n                group: group,\r\n                name: name,\r\n                money_input: money_input,\r\n                time_set: time_set,\r\n                time_now: time_now,\r\n                time_repeat: time_repeat,\r\n                past: past,\r\n                id_form: id_form,\r\n            }\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteMoney = ( id : number ) =>\r\n{\r\n    return (dispatch: Dispatch<Action>) =>\r\n    {\r\n        dispatch({\r\n            type: ActionType.DELETE,\r\n            payload: id\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const fixMoney = ( \r\n    id : number, \r\n    money_input: number,\r\n    name: string,\r\n    time_set: number,\r\n    time_repeat: TimeRepeat, \r\n    ) =>\r\n{\r\n    return (dispatch: Dispatch<Action>) =>\r\n    {\r\n        dispatch({\r\n            type: ActionType.FIX,\r\n            payload: \r\n            {\r\n                id: id,\r\n                money_input: money_input,\r\n                name: name,\r\n                time_set: time_set,\r\n                time_repeat: time_repeat,\r\n            }\r\n        })\r\n        \r\n    }\r\n}","import { Button, Input, MenuItem } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { actionCreators } from '../../state'\r\nimport { Group, MoneyFlow, TimeRepeat } from '../../state/action-type'\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport Stack from '@mui/material/Stack';\r\n\r\ninterface Props {\r\n    handleClose: () => void\r\n  }\r\n\r\nconst FormInput = ( props : Props ) => {\r\n\r\n    //--------State-----------\r\n    const dispatch = useDispatch();\r\n    const { addMoney } = bindActionCreators(actionCreators, dispatch);\r\n    //----------------------\r\n\r\n    //--------State-----------\r\n    const [timeSet, setTimeSet] = useState(false);\r\n    const [timeRepeat, setTimeRepeat] = useState(false);\r\n    const [value, setValue] = React.useState<Date | null>(new Date());\r\n    //----------------------\r\n\r\n    //--------Form-----------\r\n    type FormData = \r\n    {\r\n        money_flow: MoneyFlow,\r\n        group: Group,\r\n        name: string,\r\n        money_input: number,\r\n        // time_set: Date,\r\n        time_repeat: TimeRepeat\r\n    }\r\n    const { register, formState: {errors}, handleSubmit, reset } = useForm<FormData>();\r\n    const onSubmitForm = \r\n        handleSubmit(data => {\r\n\r\n            if (timeRepeat === false)\r\n                data.time_repeat = TimeRepeat.NULL;\r\n            console.log( data );\r\n            console.log( value );\r\n            if (\r\n                (data.name !== \"\") &&\r\n                (data.money_input >= 1000) &&\r\n                (value !== null)\r\n            )\r\n            {\r\n                console.log(\"formInput: time_set: \" + value);\r\n\r\n                let time_set = value?.getTime();\r\n                let time_now = Date.now();\r\n                if (time_set < time_now)\r\n                    time_set = time_now;\r\n                // console.log(\"formInput: time_now: \" + );\r\n                let past: boolean = false;\r\n                if (data.group === Group.IMMEDIATE)\r\n                    past = true;\r\n                addMoney(\r\n                    data.money_flow,\r\n                    data.group,\r\n                    data.name,\r\n                    data.money_input,\r\n                    time_set,\r\n                    time_now,\r\n                    data.time_repeat,\r\n                    past,\r\n                    null\r\n                );\r\n            }\r\n                \r\n            reset({\r\n                money_flow: MoneyFlow.MONEY_OUT,\r\n                group: Group.IMMEDIATE,\r\n                time_repeat: TimeRepeat.MONTH,\r\n                name: \"\",\r\n                money_input: undefined,\r\n            })\r\n\r\n            props.handleClose();\r\n        });\r\n\r\n    //----------------------\r\n\r\n    //--------Data----------\r\n    const money_flow_data = \r\n    [\r\n        {\r\n            type: MoneyFlow.MONEY_IN,\r\n            name: \"Khoản thu\"\r\n        },\r\n        {\r\n            type: MoneyFlow.MONEY_OUT,\r\n            name: \"Khoản chi\"\r\n        }\r\n    ]\r\n    const group_data = [\r\n        {\r\n            type: Group.FIXED,\r\n            name: \"Cố định\"\r\n        },\r\n        {\r\n            type: Group.FUTURE,\r\n            name: \"Tương lai\"\r\n        },\r\n        {\r\n            type: Group.IMMEDIATE,\r\n            name: \"Tức thì\"\r\n        }\r\n    ]\r\n\r\n    const time_repeat_data = \r\n    [\r\n        {\r\n            type: TimeRepeat.DAY,\r\n            name: \"Hàng ngày\"\r\n        },\r\n        {\r\n            type: TimeRepeat.WEEK,\r\n            name: \"Hàng tuần\"\r\n        },\r\n        {\r\n            type: TimeRepeat.MONTH,\r\n            name: \"Hàng tháng\"\r\n        },\r\n        {\r\n            type: TimeRepeat.QUARTER,\r\n            name: \"Hàng quý\"\r\n        },\r\n        {\r\n            type: TimeRepeat.YEAR,\r\n            name: \"Hàng năm\"\r\n        }\r\n    ]\r\n    //----------------------\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                className=\"form_root\"\r\n                onSubmit={ onSubmitForm }\r\n            >\r\n                {/* {console.log(errors)} */}\r\n                {/* Tạo 2 className đúng và sai, state nhap lan đầu bằng false, \r\n                nếu người dùng nhấn button submit => state = true và trigger error từ các form input */}\r\n\r\n                {/* ---------  Chọn khoản tiền  -----------  */}\r\n                <TextField\r\n                    select\r\n                    label=\"Chọn khoản\"\r\n                    defaultValue={MoneyFlow.MONEY_OUT}\r\n                    {...register(\"money_flow\")} \r\n                    className=\"form_money\"\r\n                >\r\n                    {money_flow_data.map((option) => (\r\n                        <MenuItem key={option.type} value={option.type}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                {/* ---------  Chọn nhóm  -----------  */}\r\n                <TextField\r\n                    select\r\n                    className=\"form_group\"\r\n                    label=\"Chọn nhóm tiền\"\r\n                    defaultValue={Group.IMMEDIATE}\r\n                    {...register(\"group\")} \r\n                    onChange={(e) => {\r\n                        console.log(\"change\");\r\n                        if (e.target.value === Group.IMMEDIATE)\r\n                            setTimeSet(false)\r\n                        else setTimeSet (true)\r\n                \r\n                        if (e.target.value !== Group.FIXED)\r\n                            setTimeRepeat(false)\r\n                        else setTimeRepeat(true)\r\n                    }}\r\n                >\r\n                    {group_data.map((option) => (\r\n                        <MenuItem key={option.type} value={option.type}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField> <br />\r\n                {/* --------  Nhập tên khoảng --------- */}\r\n                <Input\r\n                    className=\"form_input form_money\"\r\n                    type=\"text\" \r\n                    {...register(\"name\", {\r\n                        required: true,\r\n                    })} \r\n                    placeholder=\"Tên khoản...\" \r\n                />\r\n                {/* --------  Nhập tiền --------- */}\r\n                <Input\r\n                    className=\"form_input form_group\"\r\n                    type=\"number\" \r\n                    {...register(\"money_input\",{\r\n                        min: 1000,\r\n                        required: true,\r\n                        valueAsNumber: true\r\n                    })} \r\n                    placeholder=\"Nhập số tiền\" \r\n                />\r\n                {/* ------------- Time Set -------------- */}\r\n                <div className=\"flex\">\r\n                <div className=\"form_time\">\r\n                {timeSet ? (\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                        <Stack spacing={2}>\r\n                            <DateTimePicker\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Nhập thời gian: \"\r\n                                value={value}\r\n                                // {...register(\"time_set\")}\r\n                                onChange={(newValue) => {\r\n                                    setValue(newValue);\r\n                            }}\r\n                                minDateTime={new Date()}\r\n\r\n                            />\r\n                        </Stack>\r\n                    </LocalizationProvider>\r\n                ) : (\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                        <Stack spacing={2}>\r\n                            <DateTimePicker\r\n                                // variant=\"inline\"\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                                label=\"Nhập thời gian: \"\r\n                                value={value}\r\n                                disabled\r\n                                // {...register(\"time_set\")}\r\n                                onChange={(newValue) => {\r\n                                    setValue(newValue);\r\n                            }}\r\n                                minDateTime={new Date()}\r\n\r\n                            />\r\n                        </Stack>\r\n                    </LocalizationProvider>\r\n                )}\r\n                </div>\r\n                {/* ------------- Time repeat ------------ */}\r\n                {/* <div > */}\r\n                    {timeRepeat ? \r\n                    (\r\n                        <TextField\r\n                            select\r\n                            className=\"form_timeRepeat\"\r\n                            label=\"Chọn thời gian lặp lại: \"\r\n                            defaultValue={TimeRepeat.MONTH}\r\n                            {...register(\"time_repeat\")} \r\n                            >\r\n                            {time_repeat_data.map((option) => (\r\n                                <MenuItem key={option.type} value={option.type}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    ) : \r\n                    (\r\n                        <TextField\r\n                            select\r\n                            className=\"form_timeRepeat\"\r\n                            label=\"Chọn thời gian lặp lại: \"\r\n                            defaultValue={TimeRepeat.NULL}\r\n                            disabled\r\n                            {...register(\"time_repeat\")} \r\n                            >\r\n                            {time_repeat_data.map((option) => (\r\n                                <MenuItem key={option.type} value={option.type}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    )}\r\n                {/* </div> */}\r\n                </div>\r\n                {/* ------------ Submit ------------ */}\r\n                <Button \r\n                    type=\"submit\"\r\n                    className=\"form_btn_submit\"\r\n                >\r\n                    Submit\r\n                </Button>\r\n                <Button \r\n                    type=\"submit\"\r\n                    className=\"form_btn_submit\"\r\n                    color=\"error\"\r\n                    onClick={props.handleClose}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </form>\r\n            \r\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <Stack spacing={3}>\r\n                <DateTimePicker\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    label=\"Ignore date and time\"\r\n                    value={value}\r\n                    onChange={(newValue) => {\r\n                        setValue(newValue);\r\n                }}\r\n                    minDateTime={new Date()}\r\n                />\r\n                <DateTimePicker\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    label=\"Ignore time in each day\"\r\n                    value={value}\r\n                    onChange={(newValue) => {\r\n                        setValue(newValue);\r\n                }}\r\n                    minDate={new Date('2020-02-14')}\r\n                    minTime={new Date(0, 0, 0, 8)}\r\n                    maxTime={new Date(0, 0, 0, 18, 45)}\r\n                />\r\n            </Stack>\r\n        </LocalizationProvider> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useEffect, useState } from 'react'\r\nimport logo from '../../assets/generatedtext (2).png'\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport FormInput from '../FormInput/FormInput';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nconst Header = () => {\r\n\r\n    // const wrapperRef = useRef(null);\r\n    // useOutsideAlerter(wrapperRef);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [signIn, setSignIn] = useState(false);\r\n\r\n    const close = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleToggle = () => {\r\n      setOpen(!open);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"header\" >\r\n            <div>\r\n                <img \r\n                    className=\"header_logo\"\r\n                    src={logo} \r\n                    alt=\"logo\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <AddCircleIcon \r\n                    className=\"hearder_addIcon\" \r\n                    fontSize=\"large\" \r\n                    onClick={handleToggle}\r\n                />\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={open}\r\n                    // onClick={(e) => {handleClose}\r\n                >\r\n                    <FormInput handleClose={close}/>\r\n                </Backdrop>\r\n            </div>\r\n            <div>\r\n                <MenuIcon \r\n                    className=\"hearder_menuIcon\" \r\n                    fontSize=\"large\"\r\n                    onClick={() => setSignIn((s) => !s)}\r\n                />\r\n                {signIn ? (\r\n                <div className=\"header_signIn\">\r\n                    <p>Coming soon</p>\r\n                </div>\r\n                ) : null}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n// import Accordion from '@mui/material/Accordion';\r\n// import {Accordion} from '@mui/material';\r\n\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport MuiAccordion, { AccordionProps } from '@mui/material/Accordion';\r\nimport MuiAccordionSummary, {\r\n  AccordionSummaryProps,\r\n} from '@mui/material/AccordionSummary';\r\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst Accordion = styled((props: AccordionProps) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  '&:not(:last-child)': {\r\n    borderBottom: 0,\r\n  },\r\n  '&:before': {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst TabAccordion = () => {\r\n\r\n  // const [expanded, setExpanded] = useState<string | false>(false);\r\n  const [expanded, setExpanded] = useState<string | false>('panel1');\r\n\r\n  let x = useLocation();\r\n  let location = x.pathname;\r\n  location = location.slice(7);\r\n  if(location === \"\")\r\n    location = \"home\";\r\n  // console.log(location);\r\n  // const [click, setClick] = useState<\"home\" | \"money_in\" | \"money_out\" | \"history\">(location);\r\n  const [click, setClick] = useState<string>(location);\r\n\r\n  const handleChange = (panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const AccordionSummary = styled((props: AccordionSummaryProps) => (\r\n    <MuiAccordionSummary\r\n      expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n      {...props}\r\n    />\r\n  ))(({ theme }) => ({\r\n    backgroundColor:\r\n      theme.palette.mode === 'dark'\r\n        ? 'rgba(255, 255, 255, .05)'\r\n        : 'rgba(0, 0, 0, .03)',\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n      transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n  }));\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"tabAccordion2\">\r\n        <Link to=\"/Wallet/\" className=\"tabAccodion_under\">\r\n          <Accordion\r\n            expanded={expanded === 'panel1'}\r\n            onChange={handleChange('panel1')}\r\n            className={`${(click === \"home\") ? \"tabAccodion-click\" : \"\"}`}\r\n            onClick={() => {\r\n              setClick(\"home\");\r\n\r\n            }}\r\n          >\r\n            <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n              <Typography>\r\n                Home\r\n              </Typography>\r\n            </AccordionSummary>\r\n          </Accordion>\r\n        </Link>\r\n        <Link to=\"/Wallet/money-in\" className=\"tabAccodion_under\">\r\n          <Accordion\r\n            expanded={expanded === 'panel2'}\r\n            onChange={handleChange('panel2')}\r\n            className={`${(click === \"money-in\") ? \"tabAccodion-click\" : \"\"}`}\r\n            onClick={() => setClick(\"money-in\")}\r\n          >\r\n            <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n              <Typography>Khoản thu</Typography>\r\n            </AccordionSummary>\r\n            {/* <AccordionDetails className=\"tabAccodion-flex-btn\">\r\n              <a href=\"co_dinh\">\r\n                <Button>Cố định</Button>\r\n              </a>\r\n              <a href=\"tuong_lai\">\r\n                <Button>Tương lai</Button>\r\n              </a>\r\n              <a href=\"hien_tai\">\r\n                <Button>Hiện tại</Button>\r\n              </a>\r\n            </AccordionDetails> */}\r\n          </Accordion>\r\n        </Link>\r\n        <Link to=\"/Wallet/money-out\" className=\"tabAccodion_under\">\r\n          <Accordion\r\n            expanded={expanded === 'panel3'}\r\n            onChange={handleChange('panel3')}\r\n            className={`${(click === \"money-out\") ? \"tabAccodion-click\" : \"\"}`}\r\n            onClick={() => setClick(\"money-out\")}\r\n          >\r\n            <AccordionSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n              <Typography>Khoản chi</Typography>\r\n            </AccordionSummary>\r\n            {/* <AccordionDetails className=\"tabAccodion-flex-btn\">\r\n              <Button>Cố định</Button>\r\n              <Button>Tương lai</Button>\r\n              <Button>Hiện tại</Button>\r\n            </AccordionDetails> */}\r\n          </Accordion>\r\n        </Link>\r\n        <Link to=\"/Wallet/history\" className=\"tabAccodion_under\">\r\n          <Accordion\r\n            expanded={expanded === 'panel3'}\r\n            onChange={handleChange('panel3')}\r\n            className={`${(click === \"history\") ? \"tabAccodion-click\" : \"\"}`}\r\n            onClick={() => setClick(\"history\")}\r\n          >\r\n            <AccordionSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n              <Typography>Lịch sử</Typography>\r\n            </AccordionSummary>\r\n          </Accordion>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TabAccordion\r\n","import React, { useCallback } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { RootState } from '../../state/reducers';\r\nimport { useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Group, TimeRepeat } from '../../state/action-type';\r\n\r\n\r\nconst MainBoard = () => {\r\n\r\n    const walletState = useSelector((state: RootState) => state.wallet)\r\n    const data = [...walletState.list];\r\n    let money = walletState.generalMoney;\r\n    let first = 0;\r\n    let second = 0;\r\n    let third = 0;\r\n    let don_vi = \"\";\r\n    let strFirst = \"000\", strSecond = \"000\", strThird = \"000\";\r\n\r\n    enum timeShow\r\n    {\r\n        NOW = \"NOW\",\r\n        A_MONTH = \"A_MONTH\",\r\n        THREE_MONTH = \"THREE_MONTH\",\r\n        SIX_MONTH = \"SIX_MONTH\"\r\n    }\r\n\r\n    function setShow(time: timeShow) \r\n    {\r\n        // console.log(money);\r\n        if (time !== timeShow.NOW)\r\n        {\r\n            let day: number = 0;\r\n            switch (time)\r\n            {\r\n                case (timeShow.A_MONTH):\r\n                    day = 30;\r\n                    break;\r\n                case (timeShow.THREE_MONTH):\r\n                    day = 61;\r\n                    break;\r\n                case (timeShow.SIX_MONTH):\r\n                    day = 91;\r\n                    break;\r\n                default:\r\n                    day = 0;\r\n            }\r\n\r\n            let t = new Date();\r\n            let one = new Date(2020, 1, 1, 0, 0, 0);\r\n            let two = new Date(2020, 1, 31, 0, 0, 0);\r\n            let one_day: number = (two.getTime() - one.getTime()) / 30;\r\n            let time_now = t.getTime();\r\n            // console.log(time_now, one_day);\r\n\r\n            data.map((item) => {\r\n                if(item.past === false)\r\n                {\r\n                    if ((item.time_set < time_now + day * one_day) &&\r\n                        (item.time_set > time_now) &&\r\n                        (item.group === Group.FUTURE) )\r\n                    {\r\n                        money -= item.money_input;\r\n                    } else if ((item.group === Group.FIXED) &&\r\n                                (time_now > item.time_set))\r\n                    {\r\n                        let time_distan: number = 1;\r\n                        switch(item.time_repeat)\r\n                        {\r\n                            case(TimeRepeat.DAY):\r\n                                time_distan = one_day;\r\n                                break;\r\n                            case(TimeRepeat.WEEK):\r\n                                time_distan = 7 * one_day;\r\n                                break;\r\n                            case(TimeRepeat.MONTH):\r\n                                time_distan = 30 * one_day;\r\n                                break;\r\n                            case(TimeRepeat.QUARTER):\r\n                                time_distan = 91 * one_day;\r\n                                break;\r\n                            case(TimeRepeat.YEAR):\r\n                                time_distan = 365 * one_day;\r\n                                break;\r\n                            default:\r\n                                time_distan = one_day;\r\n                        }\r\n                        let a = (time_now - item.time_set) / time_distan;\r\n                        let b = (time_now + day * one_day - item.time_set) / time_distan;\r\n                        let c = Math.floor(b - a);\r\n                        money -= c * item.money_input;  \r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        let negative = false;\r\n        if (money < 0)\r\n        {\r\n            money = Math.abs(money);\r\n            negative = true;\r\n        }\r\n        if (money < 1000000000)\r\n        {\r\n            first =  Math.floor(money / 1000000);\r\n            second = money / 1000;\r\n            second = Math.floor(second % 1000);\r\n            third = money % 1000;\r\n            don_vi= \" Triệu đồng\";\r\n        }\r\n        else \r\n        {\r\n            first = Math.floor(money / 1000000000);\r\n            second = Math.floor(money / 1000000);\r\n            second = second % 1000;\r\n            third = Math.floor(money / 1000);\r\n            third = third % 1000;\r\n            don_vi = \" Tỷ đồng\";\r\n        }\r\n        // console.log(first.toString());   \r\n        strFirst = first.toString();\r\n        for (let i = strFirst.length; i<3; i++)\r\n        {\r\n            strFirst = \"0\" + strFirst;\r\n        }\r\n        if (negative)\r\n            strFirst = \"-\" + strFirst;\r\n        strSecond = second.toString();\r\n        for (let i = strSecond.length; i<3; i++)\r\n        {\r\n            strSecond = \"0\" + strSecond;\r\n        }\r\n        strThird = third.toString();\r\n        for (let i = strThird.length; i<3; i++)\r\n        {\r\n            strThird = \"0\" + strThird;\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    (negative) ? \r\n                    (\r\n                        <div \r\n                            className={` ${ (time === timeShow.NOW) ? \"mainBoard_first_negative\" : \"mainBoard_first-small_negative\"} `}\r\n                        >\r\n                            <p>\r\n                                {strFirst}.\r\n                            </p>\r\n                        </div>\r\n                    ) : \r\n                    (\r\n                        <div \r\n                            className={` ${ (time === timeShow.NOW) ? \"mainBoard_first\" : \"mainBoard_first-small\"} `}\r\n                        >\r\n                            <p>\r\n                                {strFirst}.\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                <div \r\n                    className={` ${ (time === timeShow.NOW) ? \"mainBoard_second\" : \"mainBoard_second-small\"} `}\r\n                >\r\n                    <p>\r\n                        {strSecond}\r\n                    </p>\r\n                </div>\r\n                <div \r\n                    className={` ${ (time === timeShow.NOW) ? \"mainBoard_third\" : \"mainBoard_third-small\"} `}\r\n                >\r\n                    <p>\r\n                        {strThird}\r\n                    </p>\r\n                </div>\r\n                <div \r\n                    className={` ${ (time === timeShow.NOW) ? \"mainBoard_don_vi\" : \"mainBoard_don_vi-small\"} `}\r\n                >\r\n                    <p>\r\n                        {don_vi}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"mainBoard\">\r\n            <Grid container spacing={2}>\r\n                <Grid item lg={8} md={8} sm={8} xs={12}>\r\n                    {setShow(timeShow.NOW)}\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n\r\n                    <div className=\"mainBoard_flex-down\">\r\n                        <div  className=\"mainBoard_pd_bottom\">\r\n                            <p className=\"mainBoard_mini_title\">\r\n                                1 tháng sau: \r\n                            </p>\r\n                            {setShow(timeShow.A_MONTH)}\r\n                        </div>\r\n                        <div className=\"mainBoard_pd_bottom\">\r\n                            <p className=\"mainBoard_mini_title\">\r\n                                3 tháng sau: \r\n                            </p>\r\n                            {setShow(timeShow.THREE_MONTH)}\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"mainBoard_mini_title\">\r\n                                6 tháng sau: \r\n                            </p>\r\n                            {setShow(timeShow.SIX_MONTH)}\r\n                        </div>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainBoard\r\n","import * as React from 'react';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../state/reducers';\r\nimport { Group, MoneyFlow, TimeRepeat } from '../../state/action-type';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../../state';\r\nimport { useEffect } from 'react';\r\nimport AddTaskIcon from '@mui/icons-material/AddTask';\r\n\r\ninterface PropType {\r\n  money_flow_prop: MoneyFlow | \"all\",\r\n  group_prop: Group\r\n}\r\n\r\nexport default function List(props: PropType) {\r\n\r\nconst { money_flow_prop, group_prop } = props;\r\nconst dispatch = useDispatch();\r\nconst { addMoney, deleteMoney } = bindActionCreators(actionCreators, dispatch);\r\n// ------------ Data -----------------\r\nconst walletState = useSelector((state: RootState) => state.wallet)\r\nconst data = [...walletState.list];\r\nconst [select, setSelect] = React.useState<number[]>([]);\r\n\r\ninterface Data {\r\n  id: number;\r\n  name: string;\r\n  money_input: number;\r\n  time_now: number;\r\n  time_set: number;\r\n  time_repeat: TimeRepeat;\r\n}\r\nfunction createData(\r\n  id: number,\r\n  name: string,\r\n  money_input: number,\r\n  time_now: number,\r\n  time_set: number,\r\n  time_repeat: TimeRepeat,\r\n): Data {\r\n  return {\r\n    id,\r\n    name,\r\n    money_input,\r\n    time_now,\r\n    time_set,\r\n    time_repeat,\r\n  };\r\n}\r\n\r\nconst [rows, setRows] = React.useState<Data[]>([]);\r\nuseEffect(() => {\r\n  let row : Data[] = [];\r\n  data.map((item) => {\r\n    if (\r\n        (item.money_flow === (\r\n            (money_flow_prop === \"all\") ? item.money_flow : money_flow_prop)\r\n          ) && \r\n        (item.group === group_prop)\r\n      )\r\n    {\r\n      let ite = createData(item.id, item.name, item.money_input, item.time_now, item.time_set, item.time_repeat);\r\n      row.push(ite);\r\n    }\r\n  })\r\n  setRows([...row])\r\n}, [walletState])\r\n\r\n\r\n// let row : Data[] = [];\r\n// data.map((item) => {\r\n//   if (\r\n//       (item.money_flow === (\r\n//           (money_flow_prop === \"all\") ? item.money_flow : money_flow_prop)\r\n//         ) && \r\n//       (item.group === group_prop)\r\n//     )\r\n//   {\r\n//     let ite = createData(item.id, item.name, item.money_input, item.time_now, item.time_set, item.time_repeat);\r\n//     row.push(ite);\r\n//   }\r\n// })\r\n// const [rows, setRows] = React.useState<Data[]>([...row]);\r\n// ---------------------------------------------\r\n\r\n// ----------------- So sánh -------------------\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\ntype Order = 'asc' | 'desc';\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key,\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string },\r\n) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n// ---------------------------------------------\r\n\r\n// ---------------- Tiêu đề --------------------\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  id: keyof Data;\r\n  // id: 'number'\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Tên khoản ',\r\n  },\r\n  {\r\n    id: 'money_input',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Số tiền',\r\n  },\r\n  {\r\n    id: 'time_now',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Thời gian thêm',\r\n  },\r\n  {\r\n    id: 'time_set',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Thời gian đến',\r\n  },\r\n  {\r\n    id: 'time_repeat',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Lặp lại',\r\n  },\r\n];\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n}\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler =\r\n    (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n// ---------------------------------------------\r\n\r\n// --------------- Thanh công cụ của bảng ------------------\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number;\r\n}\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const { numSelected } = props;\r\n\r\n  const confirmList = () =>\r\n  {\r\n    console.log(\"succes\");\r\n\r\n    select.map((item) => \r\n    {\r\n      data.map((task) =>\r\n      {\r\n        if (item === task.id)\r\n        {\r\n          let time_now = Date.now();\r\n          let name = task.name + \" \" + behaviorTime(time_now);\r\n          addMoney(\r\n            task.money_flow,\r\n            Group.IMMEDIATE,\r\n            name,\r\n            task.money_input,\r\n            time_now,\r\n            task.time_now,\r\n            task.time_repeat,\r\n            true,\r\n            task.id_form,\r\n          );\r\n          if(group_prop === Group.FUTURE)\r\n            deleteMoney(item);\r\n          \r\n        }\r\n      })\r\n    })\r\n\r\n    setSelect([]);\r\n    setSelected([]);\r\n  }\r\n\r\n  const deleteList = () =>\r\n  {\r\n    let rowsEx = [...rows];    \r\n    select.map((item) => {\r\n      rowsEx.forEach((row, index) =>\r\n      {\r\n        if(row.id === item)\r\n        {\r\n          rowsEx.splice(index, 1);\r\n          deleteMoney(item);\r\n        }\r\n      })\r\n    });\r\n    // console.log(rowsEx);\r\n    setRows([...rowsEx]);\r\n    setSelect([]);\r\n    setSelected([]);\r\n  }\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n      className=\"list_title\"\r\n\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n          className=\"list_title_change\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {group_prop}\r\n        </Typography>\r\n      )}\r\n      {numSelected > 0 ? (\r\n        <div className=\"list_task\">\r\n          {(group_prop !== Group.IMMEDIATE) ? \r\n          (\r\n            <Tooltip title=\"Confirm\" onClick={ () => confirmList()}>\r\n            <IconButton>\r\n              <AddTaskIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          )\r\n          : null\r\n        }\r\n          <Tooltip title=\"Delete\" onClick={ () => deleteList()}>\r\n            <IconButton>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n        \r\n      ) : (\r\n        null\r\n        // <Tooltip title=\"Filter list\">\r\n        //   <IconButton>\r\n        //     <FilterListIcon />\r\n        //   </IconButton>\r\n        // </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n// ---------------------------------------------\r\n\r\n// ------------------ Behavior -------------------\r\n\r\nconst behaviorMoney = (money: number) =>\r\n{\r\n  let money_str : string = \"\";\r\n  let ship : number = 0;\r\n  while (money > 0)\r\n  {\r\n    ship = money % 1000;\r\n    // vì đây là dạng number nên kq không phải luôn luôn có dạng 3 chữ số\r\n    // vì vậy ta pahri thêm số 0 bù vào cũng như thêm dấu .\r\n    if (ship >= 100)\r\n      money_str = ship.toString() + \".\" + money_str;\r\n    else if(ship >= 10)\r\n      money_str = \"0\" + ship.toString() + \".\" + money_str;\r\n    else money_str = \"00\" + ship.toString() + \".\" + money_str;\r\n    money = Math.floor(money / 1000);\r\n  }\r\n  // Loại bỏ các số 0 ở đầu\r\n  for (let i = 1; i<=2; i++)\r\n  {\r\n    if (money_str.slice(0, 1) === \"0\")\r\n      money_str = money_str.substring(1);\r\n  }\r\n  // Loại bỏ dấu chấm cuối\r\n  money_str = money_str.substring(0, money_str.length - 1);\r\n  return money_str;\r\n}\r\nconst behaviorTime = (time: number) => \r\n{\r\n  let timeDate = new Date(time);\r\n  // console.log(\"list: timeDate: \" + timeDate);\r\n  let day = timeDate.getDate();\r\n  let month = timeDate.getMonth() + 1;\r\n  let year = timeDate.getFullYear();\r\n  let hour = timeDate.getHours();\r\n  let minute = timeDate.getMinutes();\r\n\r\n  let money_str : string = hour.toString() + \":\" + minute.toString() +\r\n  \"  \" + day.toString() + \"/\" + month.toString() + \"/\" + year.toString();\r\n  // console.log(\"list: \" + money_str);\r\n  return money_str;\r\n}\r\nconst behaviorTimeRepeat = (time: TimeRepeat) =>\r\n{\r\n  switch(time)\r\n  {\r\n    case(TimeRepeat.NULL):\r\n      return \"-\";\r\n    case(TimeRepeat.DAY):\r\n      return \"1 ngày\";\r\n    case(TimeRepeat.WEEK):\r\n      return \"1 tuần\";\r\n    case(TimeRepeat.MONTH):\r\n      return \"1 tháng\";\r\n    case(TimeRepeat.QUARTER):\r\n      return \"1 quý\";\r\n    case(TimeRepeat.YEAR):\r\n      return \"1 năm\";\r\n    default:\r\n      return \"-\";\r\n  }\r\n}\r\n\r\n// -----------------------------------------------\r\n\r\n// ------------------ Main -----------------------\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('money_input');\r\n// ------------- Sắp xếp thứ tự mặc định ---------------\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Data,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    // old way\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n    // ---------\r\n\r\n    // new way\r\n    let array = [...select];\r\n    let rowsEx = [...rows];\r\n    if (array.length === rowsEx.length)\r\n      setSelect([]);\r\n    else \r\n    {\r\n      setSelect([]);\r\n      rowsEx.map((rowEx) => {\r\n        setSelect((array) => [...array, rowEx.id]);\r\n      })\r\n    }\r\n\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, name: string, id: number) => {\r\n    \r\n    // old way\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    // -------\r\n\r\n    // new way\r\n    // console.log(select + \" \" + id);\r\n\r\n    let array = [...select];\r\n    let index = array.indexOf(id);\r\n    if (index === -1)\r\n      setSelect([...array, id]);\r\n    else \r\n    {\r\n      array.splice(index, 1);\r\n      setSelect([...array]);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n              rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      { (money_flow_prop === \"all\") ?\r\n                      ( \r\n                        data.map((task) => {\r\n                          if(task.id === row.id)\r\n                            if(task.money_flow === MoneyFlow.MONEY_IN)\r\n                              return( \r\n                                <TableCell align=\"right\" className=\"list_green\">\r\n                                  {behaviorMoney(row.money_input)}\r\n                                </TableCell>\r\n                              )\r\n                            else {\r\n                              return(\r\n                                <TableCell align=\"right\" className=\"list_red\">\r\n                                  {behaviorMoney(row.money_input)}\r\n                                </TableCell>\r\n                              )\r\n                              \r\n                            }\r\n                        })\r\n                      \r\n                      ) :\r\n                      (\r\n                        <TableCell align=\"right\">\r\n                          {behaviorMoney(row.money_input)}\r\n                        </TableCell>\r\n                      ) }\r\n                      \r\n                      <TableCell align=\"right\">\r\n                        {behaviorTime(row.time_now)}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {behaviorTime(row.time_set)}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {behaviorTimeRepeat(row.time_repeat)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Giảm khoảng trống\"\r\n        className=\"list_dense_padding\"\r\n      />\r\n    </Box>\r\n  );\r\n} //---------- end\r\n","import React from 'react'\r\nimport { Group, MoneyFlow } from '../../state/action-type';\r\nimport List from '../../components/List/List';\r\n\r\nconst ListMoneyIn = () => {\r\n  return (\r\n    <div>\r\n        \r\n      {/* <div id=\"co_dinh\" /> */}\r\n      <List  \r\n        money_flow_prop={MoneyFlow.MONEY_IN}\r\n        group_prop={Group.FIXED}\r\n      />\r\n      <br />\r\n      {/* <div id=\"tuong_lai\" /> */}\r\n      <List  \r\n        money_flow_prop={MoneyFlow.MONEY_IN}\r\n        group_prop={Group.FUTURE}\r\n      />\r\n      <br />\r\n      {/* <div id=\"hien_tai\" /> */}\r\n      <List  \r\n      money_flow_prop={MoneyFlow.MONEY_IN}\r\n      group_prop={Group.IMMEDIATE}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListMoneyIn\r\n","import React from 'react'\r\nimport { Group, MoneyFlow } from '../../state/action-type';\r\nimport List from '../../components/List/List';\r\n\r\nconst ListMoneyOut = () => {\r\n  return (\r\n    <div>\r\n      <List  \r\n        money_flow_prop={MoneyFlow.MONEY_OUT}\r\n        group_prop={Group.FIXED}\r\n      />\r\n      <br />\r\n      <List  \r\n        money_flow_prop={MoneyFlow.MONEY_OUT}\r\n        group_prop={Group.FUTURE}\r\n      />\r\n      <br />\r\n      <List  \r\n      money_flow_prop={MoneyFlow.MONEY_OUT}\r\n      group_prop={Group.IMMEDIATE}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListMoneyOut\r\n","import React from 'react'\r\nimport { Group, MoneyFlow } from '../../state/action-type';\r\nimport List from '../../components/List/List';\r\n\r\nconst History = () => {\r\n  return (\r\n    <div>\r\n      <List  \r\n        money_flow_prop=\"all\"\r\n        group_prop={Group.FIXED}\r\n      />\r\n      <br />\r\n      <List  \r\n        money_flow_prop=\"all\"\r\n        group_prop={Group.FUTURE}\r\n      />\r\n      <br />\r\n      <List  \r\n      money_flow_prop=\"all\"\r\n      group_prop={Group.IMMEDIATE}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default History\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport MainBoard from '../../components/MainBoard/MainBoard'\r\nimport ListMoneyIn from '../ListMoneyIn/ListMoneyIn'\r\nimport ListMoneyOut from '../ListMoneyOut/ListMoneyOut'\r\nimport { Typography } from '@mui/material'\r\nimport History from '../History/History'\r\n\r\nconst Board = () => {\r\n    return (\r\n        <div className=\"board\">\r\n            <Switch>\r\n                <Route path=\"/Wallet/\" exact component={MainBoard} />\r\n                <Route path=\"/Wallet/money-in\" component={ListMoneyIn} />  \r\n                <Route path=\"/Wallet/money-out\" component={ListMoneyOut} />\r\n                <Route path=\"/Wallet/history\" component={History} />\r\n                <Route render={()=>(\r\n                    <Typography \r\n                        variant=\"h2\" \r\n                        color=\"initial\"\r\n                        className=\"board_wrong\"\r\n                    >\r\n                        Ooops Link is wrong !!\r\n                    </Typography>\r\n                    )}/>\r\n            </Switch>\r\n            \r\n            {/* </BrowserRouter> */}\r\n            {/* <MainBoard /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { StylesProvider, Container, Grid } from '@material-ui/core'\nimport Header from './components/Header/Header';\nimport TabAccordion from './components/Arcodion/TabAccordion';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state';\nimport Board from './Router/Board/Board';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Group, MoneyFlow, TimeRepeat } from './state/action-type';\nimport { RootState } from './state/reducers';\n\n\n\nfunction App() {\n\n  // --------State-----------\n  const walletState = useSelector((state: RootState) => state.wallet)\n  const data = [...walletState.list];\n  const dispatch = useDispatch();\n  const { deleteMoney, addMoney } = bindActionCreators(actionCreators, dispatch);\n  // ----------------------\n\n  //------------ Lưu data -------------\n  useEffect(() => {\n    localStorage.setItem('dataWallet', JSON.stringify(walletState))\n  }, [walletState])\n  //------------------------------------\n\n  const [timeLeft, setTimeLeft] = useState(60);\n  // let time = 0;\n\n  // useEffect(() => {\n  //   if (timeLeft === 0) return setTimeLeft(60);\n\n  //   const intervalId = setInterval(() => {\n  //     // time++;\n  //     let time_now = Date.now();\n  //     let one = new Date(2020, 1, 1, 0, 0, 0);\n  //     let two = new Date(2020, 1, 1, 0, 1, 0);\n  //     let one_sec: number = (two.getTime() - one.getTime());\n  //     data.map((item) => {\n  //       if (item.past === false) \n  //       {\n  //         if (\n  //             (item.time_set < time_now ) &&\n  //             (item.time_set > time_now - 60 * one_sec) &&\n  //             (item.group === Group.FUTURE)\n  //           ) \n  //         {\n  //           addMoney(\n  //             item.money_flow,\n  //             Group.IMMEDIATE,\n  //             item.name,\n  //             item.money_input,\n  //             time_now,\n  //             item.time_now,\n  //             item.time_repeat,\n  //             true,\n  //             item.id_form,\n  //           )\n  //         } \n  //         else \n  //         if (\n  //             (item.group === Group.FIXED) \n  //           ) \n  //         {\n  //           let one_d = new Date(2020, 1, 1, 0, 0, 0);\n  //           let two_d = new Date(2020, 1, 1, 0, 1, 0);\n  //           let one_day: number = (two_d.getTime() - one_d.getTime());\n  //           // Hai khoảng thời gian: hiện tại và hiện tại sau 1 phút \n  //           // Trừ cho time_set rồi chia cho thời gian lặp lại\n  //           // Nếu nó đến hạn trong khoảng đấy thì b > 1 và tròn dưới của b > tròn dưới của a\n  //           // ví dụ (1.1, 0.9) (5.01, 4.99); những trường hợp sai (5.01, 5.0) (8.6, 8.5)\n  //           let a = Math.floor( (time_now - item.time_set) / (one_day * item.time_repeat) );\n  //           let b = Math.floor( (time_now + 60 * one_sec - item.time_set) / (one_day * item.time_repeat) );\n  //           if( (b > 1) && (b > a))\n  //           {\n  //             addMoney(\n  //               item.money_flow,\n  //               Group.IMMEDIATE,\n  //               item.name,\n  //               item.money_input,\n  //               time_now,\n  //               item.time_now,\n  //               item.time_repeat,\n  //               true,\n  //               item.id_form,\n  //             )\n  //           }\n  //         }\n  //       }\n\n  //     })\n  //   }, 60000);\n\n  //   return () => clearInterval(intervalId);\n\n  // }, [timeLeft]);\n\n\n  return (\n    <BrowserRouter>\n\n      <StylesProvider injectFirst>\n        <div className=\"app\">\n          <Header />\n\n          {/* {console.log(timeLeft)} */}\n\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={4}>\n              <Grid item lg={3}>\n\n                {/* Link stay inside here */}\n                <TabAccordion />\n\n              </Grid>\n\n              <Grid item lg={9} xs={12}>\n\n                {/* And Route in here  */}\n                <Board />\n\n              </Grid>\n            </Grid>\n          </Container>\n\n        </div>\n\n      </StylesProvider>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\nfunction useTimer(arg0: { time: any; onExpire: () => void; }, arg1: void): { seconds: any; minutes: any; hours: any; days: any; isRunning: any; start: any; pause: any; resume: any; restart: any; } {\n  throw new Error('Function not implemented.');\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { store } from './state';\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}